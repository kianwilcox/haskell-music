-- This code was automatically generated by lhs2tex --code, from the file 
-- HSoM/Additive.lhs.  (See HSoM/MakeCode.bat.)

{-# LANGUAGE Arrows #-}

module Euterpea.Music.Signal.Additive where

import Euterpea
import Control.Arrow ((>>>),(<<<),arr)
constSF :: Clock c => a -> SigFun c a b -> SigFun c () b
constSF s sf = constA s >>> sf

-- foldSF :: Clock c => (a -> b -> b) -> b -> [SigFun c () a] -> SigFun c () b
foldSF f b sfs =
  foldr g (constA b) sfs where
    g sfa sfb =
      proc () -> do
        s1 <- sfa -< ()
        s2 <- sfb -< ()
        outA -< f s1 s2
bellAS  :: Instr (Mono AudRate)
        -- Dur -> AbsPitch -> Volume -> AudSF () Double
bellAS dur ap vol [] = 
  let  f    = apToHz ap
       v    = fromIntegral vol / 100
       d    = fromRational dur
       sfs  = map  (\r-> constA (f*r) >>> osc f1 0) 
                   [4.07, 3.76, 3, 2.74, 2, 1.71, 1.19, 0.92, 0.56]
  in proc () -> do
       aenv  <- envExponSeg [0,1,0.001] [0.003,d-0.003] -< ()
       a1    <- foldSF (+) 0 sfs -< ()
       outA -< a1*aenv*v/9

f1 = tableSinesN 4096 [1]

test1 = outFile "bell1.wav" 6 (bellAS 6 (absPitch (C,5)) 100 []) 
